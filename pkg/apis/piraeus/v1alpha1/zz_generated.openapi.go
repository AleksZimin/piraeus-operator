// +build !

/*
Piraeus Operator
Copyright 2019 LINBIT USA, LLC.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by openapi-gen. Do not edit it manually!

package v1alpha1

import (
	spec "github.com/go-openapi/spec"
	common "k8s.io/kube-openapi/pkg/common"
)

func GetOpenAPIDefinitions(ref common.ReferenceCallback) map[string]common.OpenAPIDefinition {
	return map[string]common.OpenAPIDefinition{
		"./pkg/apis/piraeus/v1alpha1.PiraeusControllerSet":       schema_pkg_apis_piraeus_v1alpha1_PiraeusControllerSet(ref),
		"./pkg/apis/piraeus/v1alpha1.PiraeusControllerSetSpec":   schema_pkg_apis_piraeus_v1alpha1_PiraeusControllerSetSpec(ref),
		"./pkg/apis/piraeus/v1alpha1.PiraeusControllerSetStatus": schema_pkg_apis_piraeus_v1alpha1_PiraeusControllerSetStatus(ref),
		"./pkg/apis/piraeus/v1alpha1.PiraeusNodeSet":             schema_pkg_apis_piraeus_v1alpha1_PiraeusNodeSet(ref),
		"./pkg/apis/piraeus/v1alpha1.PiraeusNodeSetSpec":         schema_pkg_apis_piraeus_v1alpha1_PiraeusNodeSetSpec(ref),
		"./pkg/apis/piraeus/v1alpha1.PiraeusNodeSetStatus":       schema_pkg_apis_piraeus_v1alpha1_PiraeusNodeSetStatus(ref),
	}
}

func schema_pkg_apis_piraeus_v1alpha1_PiraeusControllerSet(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "PiraeusControllerSet is the Schema for the piraeuscontrollersets API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/piraeus/v1alpha1.PiraeusControllerSetSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/piraeus/v1alpha1.PiraeusControllerSetStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"./pkg/apis/piraeus/v1alpha1.PiraeusControllerSetSpec", "./pkg/apis/piraeus/v1alpha1.PiraeusControllerSetStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_piraeus_v1alpha1_PiraeusControllerSetSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "PiraeusControllerSetSpec defines the desired state of PiraeusControllerSet",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_piraeus_v1alpha1_PiraeusControllerSetStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "PiraeusControllerSetStatus defines the observed state of PiraeusControllerSet",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_piraeus_v1alpha1_PiraeusNodeSet(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "PiraeusNodeSet is the Schema for the piraeusnodesets API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/piraeus/v1alpha1.PiraeusNodeSetSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/piraeus/v1alpha1.PiraeusNodeSetStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"./pkg/apis/piraeus/v1alpha1.PiraeusNodeSetSpec", "./pkg/apis/piraeus/v1alpha1.PiraeusNodeSetStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_piraeus_v1alpha1_PiraeusNodeSetSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "PiraeusNodeSetSpec defines the desired state of PiraeusNodeSet",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_piraeus_v1alpha1_PiraeusNodeSetStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "PiraeusNodeSetStatus defines the observed state of PiraeusNodeSet",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}
